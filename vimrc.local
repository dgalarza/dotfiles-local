let base16colorspace=256
let mapleader = ","

nnoremap <leader>w <C-w>v<C-w>l

" Disable wordwrap
set nowrap

set list  " Shows invisible characters
set listchars=tab:▸\ ,eol:¬

set t_Co=256
set background=dark
set colorcolumn=120
colorscheme nord

" navigate tabs
nmap <Leader>nt :tabnew<CR>
map <leader><tab> :tabn <CR>
map <leader>p<tab> :tabp <CR>

" Remap to use new leader key
nnoremap <silent> <Leader>t :TestFile<CR>
nnoremap <silent> <Leader>s :TestNearest<CR>
nnoremap <silent> <Leader>l :TestLast<CR>
nnoremap <silent> <Leader>a :TestSuite<CR>
nnoremap <silent> <Leader>gt :TestVisit<CR>

let g:indentobject_meaningful_indentation = ['haml', 'sass', 'yaml', 'markdown']
let g:indentLine_fileType = ['yaml']

" Python configuration
au FileType python setl sw=4 et ts=8 sts=4

nnoremap <leader>r :source $MYVIMRC<cr>
nnoremap <leader>h :e %:h

" Replace ctrlp with FZF
nnoremap <C-P> :Files<CR>


set path+=app/javascript

let g:rails_projections = {
      \ "spec/javascript/*.spec.jsx": { "alternate": "app/javascript/{}.jsx" },
      \ "app/javascript/*.jsx": { "alternate": "spec/javascript/{}.spec.jsx" },
      \ "spec/javascript/*.spec.js": { "alternate": "app/javascript/{}.js" },
      \ "app/javascript/*.js": { "alternate": "spec/javascript/{}.spec.js" }
      \ }

augroup FiletypeGroup
  autocmd!
  au BufNewFile,BufRead *.jsx set filetype=javascript.jsx
augroup END

autocmd! VimResized
autocmd VimResized * :wincmd =

let g:ale_linters = {'jsx': ['stylelint', 'eslint']}
let g:ale_linter_aliases = {'jsx': 'css'}
let b:ale_fixers = {'javascript': ['eslint']}
let g:ale_fix_on_save = 1
let g:ale_completion_enabled = 1
